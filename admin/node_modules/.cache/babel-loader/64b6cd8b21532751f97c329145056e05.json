{"ast":null,"code":"const ListReducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_LISTS_START\":\n      return {\n        lists: [],\n        isFetching: true,\n        error: false\n      };\n\n    case \"GET_LISTS_SUCCESS\":\n      return {\n        lists: action.payload,\n        isFetching: false,\n        error: false\n      };\n\n    case \"GET_LISTS_FAILURE\":\n      return {\n        lists: [],\n        isFetching: false,\n        error: true\n      };\n\n    case \"CREATE_LIST_START\":\n      return { ...state,\n        isFetching: true,\n        error: false\n      };\n\n    case \"CREATE_LIST_SUCCESS\":\n      return {\n        lists: [...state.lists, action.payload],\n        isFetching: false,\n        error: false\n      };\n\n    case \"CREATE_LIST_FAILURE\":\n      return { ...state,\n        isFetching: false,\n        error: true\n      };\n\n    case \"UPLOAD_LIST_START\":\n      return { ...state,\n        isFetching: true,\n        error: false\n      };\n\n    case \"UPLOAD_LIST_SUCCESS\":\n      return {\n        lists: state.lists.map(list => list._id === action.payload._id && action.payload),\n        isFetching: false,\n        error: false\n      };\n\n    case \"UPLOAD_LIST_FAILURE\":\n      return { ...state,\n        isFetching: false,\n        error: true\n      };\n\n    case \"DELETE_LIST_START\":\n      return { ...state,\n        isFetching: true,\n        error: false\n      };\n\n    case \"DELETE_LIST_SUCCESS\":\n      return {\n        lists: state.lists.filter(list => list._id !== action.payload),\n        isFetching: false,\n        error: false\n      };\n\n    case \"DELETE_LIST_FAILURE\":\n      return { ...state,\n        isFetching: false,\n        error: true\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = ListReducer;\nexport default ListReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListReducer\");","map":{"version":3,"names":["ListReducer","state","action","type","lists","isFetching","error","payload","map","list","_id","filter"],"sources":["/Users/vico/Documents/React/netflix-clone/admin/src/context/listContext/ListReducer.js"],"sourcesContent":["const ListReducer = (state, action) => {\n    switch (action.type) {\n      case \"GET_LISTS_START\":\n        return {\n          lists: [],\n          isFetching: true,\n          error: false,\n        };\n      case \"GET_LISTS_SUCCESS\":\n        return {\n          lists: action.payload,\n          isFetching: false,\n          error: false,\n        };\n      case \"GET_LISTS_FAILURE\":\n        return {\n          lists: [],\n          isFetching: false,\n          error: true,\n        };\n      case \"CREATE_LIST_START\":\n        return {\n          ...state,\n          isFetching: true,\n          error: false,\n        };\n      case \"CREATE_LIST_SUCCESS\":\n        return {\n          lists: [...state.lists, action.payload],\n          isFetching: false,\n          error: false,\n        };\n      case \"CREATE_LIST_FAILURE\":\n        return {\n          ...state,\n          isFetching: false,\n          error: true,\n        };\n      case \"UPLOAD_LIST_START\":\n        return {\n          ...state,\n          isFetching: true,\n          error: false,\n        };\n      case \"UPLOAD_LIST_SUCCESS\":\n        return {\n          lists: state.lists.map(\n            (list) => list._id === action.payload._id && action.payload\n          ),\n          isFetching: false,\n          error: false,\n        };\n      case \"UPLOAD_LIST_FAILURE\":\n        return {\n          ...state,\n          isFetching: false,\n          error: true,\n        };\n      case \"DELETE_LIST_START\":\n        return {\n          ...state,\n          isFetching: true,\n          error: false,\n        };\n      case \"DELETE_LIST_SUCCESS\":\n        return {\n          lists: state.lists.filter((list) => list._id !== action.payload),\n          isFetching: false,\n          error: false,\n        };\n      case \"DELETE_LIST_FAILURE\":\n        return {\n          ...state,\n          isFetching: false,\n          error: true,\n        };\n      default:\n        return { ...state };\n    }\n  };\n  \n  export default ListReducer;"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACnC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,iBAAL;MACE,OAAO;QACLC,KAAK,EAAE,EADF;QAELC,UAAU,EAAE,IAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,mBAAL;MACE,OAAO;QACLF,KAAK,EAAEF,MAAM,CAACK,OADT;QAELF,UAAU,EAAE,KAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,mBAAL;MACE,OAAO;QACLF,KAAK,EAAE,EADF;QAELC,UAAU,EAAE,KAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,mBAAL;MACE,OAAO,EACL,GAAGL,KADE;QAELI,UAAU,EAAE,IAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,qBAAL;MACE,OAAO;QACLF,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiBF,MAAM,CAACK,OAAxB,CADF;QAELF,UAAU,EAAE,KAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,qBAAL;MACE,OAAO,EACL,GAAGL,KADE;QAELI,UAAU,EAAE,KAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,mBAAL;MACE,OAAO,EACL,GAAGL,KADE;QAELI,UAAU,EAAE,IAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,qBAAL;MACE,OAAO;QACLF,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYI,GAAZ,CACJC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACK,OAAP,CAAeG,GAA5B,IAAmCR,MAAM,CAACK,OAD/C,CADF;QAILF,UAAU,EAAE,KAJP;QAKLC,KAAK,EAAE;MALF,CAAP;;IAOF,KAAK,qBAAL;MACE,OAAO,EACL,GAAGL,KADE;QAELI,UAAU,EAAE,KAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,mBAAL;MACE,OAAO,EACL,GAAGL,KADE;QAELI,UAAU,EAAE,IAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,qBAAL;MACE,OAAO;QACLF,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYO,MAAZ,CAAoBF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACK,OAAjD,CADF;QAELF,UAAU,EAAE,KAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,qBAAL;MACE,OAAO,EACL,GAAGL,KADE;QAELI,UAAU,EAAE,KAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF;MACE,OAAO,EAAE,GAAGL;MAAL,CAAP;EA5EJ;AA8ED,CA/EH;;KAAMD,W;AAiFJ,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}