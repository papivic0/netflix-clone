{"ast":null,"code":"const MovieReducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_MOVIES_START\":\n      return {\n        movies: [],\n        isFetching: true,\n        error: false\n      };\n\n    case \"GET_MOVIES_SUCCESS\":\n      return {\n        movies: action.payload,\n        isFetching: false,\n        error: false\n      };\n\n    case \"GET_MOVIES_FAILURE\":\n      return {\n        movies: [],\n        isFetching: false,\n        error: true\n      };\n\n    case \"CREATE_MOVIE_START\":\n      return { ...state,\n        isFetching: true,\n        error: false\n      };\n\n    case \"CREATE_MOVIE_SUCCESS\":\n      return {\n        movies: [...state.movies, action.payload],\n        isFetching: false,\n        error: false\n      };\n\n    case \"CREATE_MOVIE_FAILURE\":\n      return { ...state,\n        isFetching: false,\n        error: true\n      };\n\n    case \"UPLOAD_MOVIE_START\":\n      return { ...state,\n        isFetching: true,\n        error: false\n      };\n\n    case \"UPLOAD_MOVIE_SUCCESS\":\n      return {\n        movies: state.movies.map(movie => movie._id === action.payload._id && action.payload),\n        isFetching: false,\n        error: false\n      };\n\n    case \"UPLOAD_MOVIE_FAILURE\":\n      return { ...state,\n        isFetching: false,\n        error: true\n      };\n\n    case \"DELETE_MOVIE_START\":\n      return { ...state,\n        isFetching: true,\n        error: false\n      };\n\n    case \"DELETE_MOVIE_SUCCESS\":\n      return {\n        movies: state.movies.filter(movie => movie._id !== action.payload),\n        isFetching: false,\n        error: false\n      };\n\n    case \"DELETE_MOVIE_FAILURE\":\n      return { ...state,\n        isFetching: false,\n        error: true\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = MovieReducer;\nexport default MovieReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieReducer\");","map":{"version":3,"names":["MovieReducer","state","action","type","movies","isFetching","error","payload","map","movie","_id","filter"],"sources":["/Users/vico/Documents/React/netflix-clone/admin/src/context/movieContext/MovieReducer.js"],"sourcesContent":["const MovieReducer = (state, action) => {\n    switch (action.type) {\n      case \"GET_MOVIES_START\":\n        return {\n          movies: [],\n          isFetching: true,\n          error: false,\n        };\n      case \"GET_MOVIES_SUCCESS\":\n        return {\n          movies: action.payload,\n          isFetching: false,\n          error: false,\n        };\n      case \"GET_MOVIES_FAILURE\":\n        return {\n          movies: [],\n          isFetching: false,\n          error: true,\n        };\n      case \"CREATE_MOVIE_START\":\n        return {\n          ...state,\n          isFetching: true,\n          error: false,\n        };\n      case \"CREATE_MOVIE_SUCCESS\":\n        return {\n          movies: [...state.movies, action.payload],\n          isFetching: false,\n          error: false,\n        };\n      case \"CREATE_MOVIE_FAILURE\":\n        return {\n          ...state,\n          isFetching: false,\n          error: true,\n        };\n      case \"UPLOAD_MOVIE_START\":\n        return {\n          ...state,\n          isFetching: true,\n          error: false,\n        };\n      case \"UPLOAD_MOVIE_SUCCESS\":\n        return {\n          movies: state.movies.map(\n            (movie) => movie._id === action.payload._id && action.payload\n          ),\n          isFetching: false,\n          error: false,\n        };\n      case \"UPLOAD_MOVIE_FAILURE\":\n        return {\n          ...state,\n          isFetching: false,\n          error: true,\n        };\n      case \"DELETE_MOVIE_START\":\n        return {\n          ...state,\n          isFetching: true,\n          error: false,\n        };\n      case \"DELETE_MOVIE_SUCCESS\":\n        return {\n          movies: state.movies.filter((movie) => movie._id !== action.payload),\n          isFetching: false,\n          error: false,\n        };\n      case \"DELETE_MOVIE_FAILURE\":\n        return {\n          ...state,\n          isFetching: false,\n          error: true,\n        };\n      default:\n        return { ...state };\n    }\n  };\n  \n  export default MovieReducer;"],"mappings":"AAAA,MAAMA,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACpC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,kBAAL;MACE,OAAO;QACLC,MAAM,EAAE,EADH;QAELC,UAAU,EAAE,IAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,oBAAL;MACE,OAAO;QACLF,MAAM,EAAEF,MAAM,CAACK,OADV;QAELF,UAAU,EAAE,KAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,oBAAL;MACE,OAAO;QACLF,MAAM,EAAE,EADH;QAELC,UAAU,EAAE,KAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,oBAAL;MACE,OAAO,EACL,GAAGL,KADE;QAELI,UAAU,EAAE,IAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,sBAAL;MACE,OAAO;QACLF,MAAM,EAAE,CAAC,GAAGH,KAAK,CAACG,MAAV,EAAkBF,MAAM,CAACK,OAAzB,CADH;QAELF,UAAU,EAAE,KAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,sBAAL;MACE,OAAO,EACL,GAAGL,KADE;QAELI,UAAU,EAAE,KAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,oBAAL;MACE,OAAO,EACL,GAAGL,KADE;QAELI,UAAU,EAAE,IAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,sBAAL;MACE,OAAO;QACLF,MAAM,EAAEH,KAAK,CAACG,MAAN,CAAaI,GAAb,CACLC,KAAD,IAAWA,KAAK,CAACC,GAAN,KAAcR,MAAM,CAACK,OAAP,CAAeG,GAA7B,IAAoCR,MAAM,CAACK,OADhD,CADH;QAILF,UAAU,EAAE,KAJP;QAKLC,KAAK,EAAE;MALF,CAAP;;IAOF,KAAK,sBAAL;MACE,OAAO,EACL,GAAGL,KADE;QAELI,UAAU,EAAE,KAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,oBAAL;MACE,OAAO,EACL,GAAGL,KADE;QAELI,UAAU,EAAE,IAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,sBAAL;MACE,OAAO;QACLF,MAAM,EAAEH,KAAK,CAACG,MAAN,CAAaO,MAAb,CAAqBF,KAAD,IAAWA,KAAK,CAACC,GAAN,KAAcR,MAAM,CAACK,OAApD,CADH;QAELF,UAAU,EAAE,KAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,sBAAL;MACE,OAAO,EACL,GAAGL,KADE;QAELI,UAAU,EAAE,KAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF;MACE,OAAO,EAAE,GAAGL;MAAL,CAAP;EA5EJ;AA8ED,CA/EH;;KAAMD,Y;AAiFJ,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}